on:
  [push]

jobs:
  test-and-push:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:12
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: pwd
          POSTGRES_DB: okr
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'
          server-id: github
          settings-path: ${{github.workspace}}

      - name: Set up node 18
        uses: actions/setup-node@v3
        with:
          node-version: 18.17.1

      - name: Install Dependencies
        run: cd ./frontend && npm ci

      - name: Build frontend with Angular
        run: cd ./frontend && npm run build:staging

      - name: Build backend with Maven
        run: mvn -B clean package --file pom.xml -P staging

      - name: Build the docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: docker/Dockerfile
          tags: okr-e2e-test:latest
          load: true
          push: false

      - name: Run docker image
        run: |
          docker run --network=host \
          -p 8080:8080 \
          -e SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER-URI=https://idp-mock-okr.ocp.cloudscale.puzzle.ch/realms/pitc \
          -e SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK-SET-URI=https://idp-mock-okr.ocp.cloudscale.puzzle.ch/realms/pitc/protocol/openid-connect/certs \
          -e SPRING_SECURITY_OAUTH2_RESOURCESERVER_OPAQUETOKEN_CLIENT-ID=pitc_okr_staging \
          -e SPRING_PROFILES_ACTIVE-ID=integration-test \
          -e SPRING_DATASOURCE_URL="jdbc:h2:mem:db;DB_CLOSE_DELAY=-1" \
          -e SPRING_DATASOURCE_USERNAME=user \
          -e SPRING_DATASOURCE_PASSWORD=sa \
          -e SPRING_FLYWAY_LOCATIONS="classpath:db/h2-db/database-h2-schema,classpath:db/h2-db/data-test-h2" \
          okr-e2e-test:latest &

      - name: Cypress run e2e tests
        uses: cypress-io/github-action@v6
        with:
          install: false
          wait-on: 'http://localhost:8080/config'
          wait-on-timeout: 120
          browser: chrome
          working-directory: frontend
          config: baseUrl=http://localhost:8080


      - name: Upload screenshots
        uses: actions/upload-artifact@v3.1.3
        if: failure()
        with:
          name: cypress-snapshots
          path: frontend/cypress/snapshots